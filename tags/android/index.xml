<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Luca Weiss</title>
    <link>https://lucaweiss.eu/tags/android/</link>
    <description>Recent content in Android on Luca Weiss</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>&amp;copy; {year} Luca Weiss</copyright>
    <lastBuildDate>Thu, 30 Mar 2023 22:50:00 +0200</lastBuildDate>
    <atom:link href="https://lucaweiss.eu/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mounting Android Retrofit Dynamic Partition images</title>
      <link>https://lucaweiss.eu/post/2023-03-30-retrofit-dynamic-partition/</link>
      <pubDate>Thu, 30 Mar 2023 22:50:00 +0200</pubDate>
      <guid>https://lucaweiss.eu/post/2023-03-30-retrofit-dynamic-partition/</guid>
      <description>&lt;p&gt;Android devices launching with Android 10 and newer use a feature called &lt;a href=&#34;https://source.android.com/docs/core/ota/dynamic_partitions&#34;&gt;Dynamic Partitions&lt;/a&gt; which essentially combines the &lt;code&gt;system_a&lt;/code&gt;, &lt;code&gt;vendor_a&lt;/code&gt; and &lt;code&gt;product_a&lt;/code&gt; (and all the &lt;code&gt;_b&lt;/code&gt;) variants into a single partition simplifying the actual partition layout while making it more flexible. Think of it like a single physical partition which contains multiple logical partitions, like with LVM.&lt;/p&gt;&#xA;&lt;p&gt;This feature is available on newly launched devices, devices launched with earlier Android versions still have to cope with the rigid partition layout on-disk. For this Android has introduced a way to &lt;a href=&#34;https://source.android.com/docs/core/ota/dynamic_partitions/implement#upgrading-devices&#34;&gt;retrofit dynamic partitions&lt;/a&gt; onto exiting the existing partition layout.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Signing boot images for fastboot</title>
      <link>https://lucaweiss.eu/post/2017-06-16-signing-boot-images/</link>
      <pubDate>Fri, 16 Jun 2017 08:55:00 +0200</pubDate>
      <guid>https://lucaweiss.eu/post/2017-06-16-signing-boot-images/</guid>
      <description>&lt;p&gt;If you have ever seen the error &lt;code&gt;FAILED (remote: bootimage: incomplete or not signed)&lt;/code&gt;, here&amp;rsquo;s the solution (at least for the Fairphone 2 ðŸ˜‰):&lt;/p&gt;&#xA;&lt;p&gt;Download the &lt;code&gt;BootSignature.jar&lt;/code&gt; file from my server (or compile it yourself from the LineageOS 14.1 tree with the command &lt;code&gt;mka BootSignature&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -O https://public.lucaweiss.eu/BootSignature.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Download the &lt;code&gt;make_key&lt;/code&gt; tool from the LineageOS GitHub.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -O https://raw.githubusercontent.com/LineageOS/android_development/cm-14.1/tools/make_key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make the script executable&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x make_key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Generate the key with&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cross-compiling native Linux applications for Android</title>
      <link>https://lucaweiss.eu/post/2015-12-12-cross-compiling-native-linux-applications-for-android/</link>
      <pubDate>Sat, 12 Dec 2015 20:23:00 +0100</pubDate>
      <guid>https://lucaweiss.eu/post/2015-12-12-cross-compiling-native-linux-applications-for-android/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s how you can cross-compile &amp;ldquo;normal&amp;rdquo; Linux applications for Android!&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note, that I cannot give you any help in following this. It worked(tm) when I wrote this but don&amp;rsquo;t know about now.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For the &lt;code&gt;android_configure&lt;/code&gt; script download &lt;a href=&#34;https://gist.github.com/z3ntu/57b95b02ebe8e153d5a8&#34;&gt;this script&lt;/a&gt;, place it in your &lt;code&gt;~/bin&lt;/code&gt; folder and (if not already) add &lt;code&gt;~/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/li&gt;&#xA;&lt;li&gt;To create a standalone toolchain use something like the following command (run from your NDK root-dir):&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build/tools/make_standalone_toolchain.py --arch arm --api &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; --stl gnustl -v --install-dir /home/luca/Android/standalone-toolchain&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ncurses&#34;&gt;Ncurses&lt;/h3&gt;&#xA;&lt;p&gt;Add &lt;code&gt;ac_cv_header_locale_h=no&lt;/code&gt; to your &lt;code&gt;android_configure&lt;/code&gt; script to the line &lt;code&gt;export CC&lt;/code&gt; (example: &lt;code&gt;export CC=${CROSS_PATH}/${CROSS_COMPILE}-gcc ac_cv_header_locale_h=no&lt;/code&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Play Services with Android 6.0 Marshmallow and Genymotion</title>
      <link>https://lucaweiss.eu/post/2015-12-10-play-services-with-genymotion/</link>
      <pubDate>Thu, 10 Dec 2015 12:24:00 +0100</pubDate>
      <guid>https://lucaweiss.eu/post/2015-12-10-play-services-with-genymotion/</guid>
      <description>&lt;p&gt;So, I think you want to install the Google Play Store &amp;amp; Services with an Android 6.0 Marshmallow Emulator?&lt;/p&gt;&#xA;&lt;p&gt;To do that, follow either the long or the short version.&lt;/p&gt;&#xA;&lt;p&gt;You need the following three files:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.mirrorcreator.com/files/0ZIO8PME/Genymotion-ARM-Translation_v1.1.zip_links&#34;&gt;Genymotion-ARM-Translation_v1.1.zip&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.androidfilehost.com/?fid=96042739161891406&#34;&gt;gapps-L-4-21-15.zip&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.androidfilehost.com/?fid=24052804347835438&#34;&gt;benzo-gapps-M-20151011-signed-chroma-r3.zip&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Short version:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Download all three files.&lt;/li&gt;&#xA;&lt;li&gt;Create an emulator with the &lt;code&gt;Nexus 5X&lt;/code&gt; image and start it.&lt;/li&gt;&#xA;&lt;li&gt;Flash &lt;code&gt;Genymotion-ARM-Translation_v1.1.zip&lt;/code&gt; and reboot.&lt;/li&gt;&#xA;&lt;li&gt;Flash &lt;code&gt;gapps-L-4-21-15.zip&lt;/code&gt; and reboot.&lt;/li&gt;&#xA;&lt;li&gt;Sign into your Google Account.&lt;/li&gt;&#xA;&lt;li&gt;Flash &lt;code&gt;benzo-gapps-M-20151011-signed-chroma-r3.zip&lt;/code&gt; and reboot.&lt;/li&gt;&#xA;&lt;li&gt;You are finished!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Long version:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSH on Android</title>
      <link>https://lucaweiss.eu/post/2015-11-03-ssh-on-android/</link>
      <pubDate>Tue, 03 Nov 2015 10:40:00 +0100</pubDate>
      <guid>https://lucaweiss.eu/post/2015-11-03-ssh-on-android/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Installing the SSH binary on Android (for use with adb shell):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Install &lt;a href=&#34;https://play.google.com/store/apps/details?id=berserker.android.apps.sshdroid&#34;&gt;SSHDroid&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Launch SSHDroid and accept the superuser request&lt;/p&gt;&#xA;&lt;p&gt;Then make sure you have your Android device connected with access to adb!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ adb shell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ su&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount -o rw,remount /system&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp /data/data/berserker.android.apps.sshdroid/dropbear/ssh /system/bin/ssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
